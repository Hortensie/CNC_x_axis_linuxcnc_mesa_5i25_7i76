# Include your custom HAL commands here
# This file will not be overwritten when you run PNCconf again

#Realtime components and functions
loadrt mux4 count=1
addf mux4.0 servo-thread
loadrt and2 count=1
addf and2.0 servo-thread

# --- MPG AXIS SELECTION
#MAP INPUT MESA PINS to HAL SIGNALS
# AXIS X
net axis-select-x    <=  hm2_5i25.0.7i76.0.0.input-20
# AXIS Y
net axis-select-y    <=  hm2_5i25.0.7i76.0.0.input-21
# AXIS Z
net axis-select-z    <=  hm2_5i25.0.7i76.0.0.input-22
# AXIS A
net axis-select-a    <=  hm2_5i25.0.7i76.0.0.input-23
# AXIS B
net axis-select-b    <=  hm2_5i25.0.7i76.0.0.input-24
# AXIS C
net axis-select-c    <=  hm2_5i25.0.7i76.0.0.input-25

# --- ESTOP-EXT ---
net estop_jog     <=  hm2_5i25.0.7i76.0.0.input-00


#  --- MAPPING MPG ENCODER signals to jog counters
# using two different encoders for different axis (X,Y)
net x-jog-counter <= hm2_5i25.0.7i76.0.0.enc0.count
net y-jog-counter <= hm2_5i25.0.7i76.0.0.enc1.count

#Setting MPG velocity mode for axis
setp    axis.x.jog-vel-mode 0
setp    axis.y.jog-vel-mode 0
setp    axis.z.jog-vel-mode 0

#  --- MAPPING INPUT signals and modes to linux cnc signals / gui

net x-jog-counter => axis.x.jog-counts
net y-jog-counter => axis.y.jog-counts

# Transfer input signal to linux cnc action (enable axis selection)
net axis-select-x => axis.x.jog-enable 
net axis-select-y => axis.y.jog-enable 
net axis-select-z => axis.z.jog-enable 
net axis-select-a => axis.a.jog-enable 
net axis-select-b => axis.b.jog-enable 
net axis-select-c => axis.c.jog-enable 

# Transfer input signal to linux cnc action (enable axis increment)
# default increment is X1 = 0.001 then other two input switches set ot tp (X10= 0.01, X100 = 0.1)

setp mux4.0.in0 0.001
setp mux4.0.in1 0.01
setp mux4.0.in2 0.1

net scale1 mux4.0.sel0 <= hm2_5i25.0.7i76.0.0.input-27
net scale2 mux4.0.sel1 <= hm2_5i25.0.7i76.0.0.input-28
net mpg-scale <= mux4.0.out
net mpg-scale => axis.x.jog-scale
net mpg-scale => axis.y.jog-scale
net mpg-scale => axis.z.jog-scale
net mpg-scale => axis.a.jog-scale
net mpg-scale => axis.b.jog-scale
net mpg-scale => axis.c.jog-scale


# ESTOP button trigger GUI control
net estop_prog <= iocontrol.0.user-enable-out
net estop_prog => and2.0.in0
net estop_jog => and2.0.in1
net and2out <= and2.0.out => iocontrol.0.emc-enable-in

